{"version":3,"sources":["tempList.js","components/recipe.jsx","components/recipesearch.jsx","components/recipelist.jsx","tempDetails.js","components/recipedetail.jsx","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","_this$props$recipe","this","props","recipe","handleDetails","react_default","a","createElement","Fragment","className","src","style","height","alt","type","onClick","href","target","rel","Component","RecipeSearch","_this$props","value","handleChange","handleSubmit","onSubmit","htmlFor","name","placeholder","onChange","Recipelist","error","err","recipesearch_RecipeSearch","map","index","recipe_Recipe","key","f2f_url","ingredients","publisher_url","RecipeDetails","state","console","log","id","url","fetch","data","json","jsonData","setState","_context","t0","_this$state$recipe","handleIndex","item","App","base_url","details_id","pageIndex","search","query","displaypage","recipelist_Recipelist","_this","recipedetail_RecipeDetails","e","preventDefault","_this$state","concat","getRecipes","length","_this2","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f72c52b.chunk.js","sourcesContent":["export const recipes = [\n  {\n    recipe_id: 35382,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35383,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35384,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  }\n];\n","import React, { Component } from 'react'\r\n\r\nexport default class Recipe extends Component {\r\n  render() {\r\n      const {\r\n    image_url,title,source_url,publisher} =this.props.recipe\r\n\r\n     const {handleDetails}= this.props\r\n    return (\r\n      <React.Fragment>\r\n       <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n           <div className=\"card\">\r\n               <img src={image_url}\r\n               className=\"img-card-top\"\r\n               style={{height:'14rem'}}\r\n                alt=\"recipe\"/>\r\n                <div className=\"card-body text-capitalize\">\r\n                    <h6>{title}</h6>\r\n                    <h6 className=\"text-warning text-slanted\">\r\n                        provided by {publisher}\r\n                    </h6>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button type=\"button\"\r\n                    className='btn btn-primary text-capitalize'\r\n                    onClick={handleDetails}\r\n                    >details</button>\r\n                    <a href={source_url} className=\"btn btn-success mx-2 text-capitalize\"\r\n                    target=\"_blank\" rel=\"noopener noreferrer\"\r\n                    >recipe url</a>\r\n                </div>\r\n           </div>\r\n       </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class RecipeSearch extends Component {\r\n  render() {\r\n    const {value,handleChange,handleSubmit } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\r\n              <h1 className=\"text-slanted text-capitalize\">\r\n                search for recipe with  <strong className='text-danger'>\r\n                  Food2Fork\r\n                  </strong>\r\n              </h1>\r\n              <form className='mt-4' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"search\">\r\n                 made from cjhyy\r\n</label>\r\n                <div className=\"input-group\">\r\n                  <input type=\"text\" name='search' placeholder=\"chicken,onions,carrots\"\r\n                  className=\"form-control\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  \r\n                   />\r\n                  <div className=\"input-group-append\">\r\n                    <button type='submit'\r\n                    className='input-group-text bg-primary text-white'\r\n                    >\r\n                    \r\n                    <i className=\"fas fa-search\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Recipe from \"./recipe\";\r\nimport RecipeSearch from './recipesearch'\r\nexport default class Recipelist extends Component {\r\n\r\n  render() {\r\n        const {recipes,handleDetails,value,handleSubmit,handleChange,error,err}=this.props\r\n        // console.log(recipes.length);\r\n        \r\n    return (\r\n      <React.Fragment>\r\n        \r\n          <RecipeSearch value={value} handleChange={handleChange} \r\n          handleSubmit={handleSubmit} />\r\n          <div className=\"container my-5\">\r\n              {/* {title} */}\r\n              <div className=\"row\">\r\n                  <div className=\"col-10 mx-auto \r\n                  col-md-6 text-center text-uppercase mb-3\">\r\n                    <h1 className=\"text-slanted\">\r\n                        recipe list\r\n                    </h1>\r\n                  </div>\r\n<div className='col-10'></div>\r\n                  <div className=\"row\">\r\n                      {err?<h1 className=\"text-danger text-center\">{err}</h1>:\r\n                        error?<h2 className=\"text-danger text-center\">{error}</h2>:recipes.map((recipe,index)=>{\r\n                    \r\n                          \r\n                          return(\r\n                              <Recipe key={recipe.recipe_id}\r\n                               recipe={recipe} \r\n                               handleDetails={\r\n                                ()=>handleDetails(0,recipe.recipe_id)} />\r\n                          )\r\n\r\n                      })}\r\n                      \r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","export const recipe = {\n  f2f_url: \"http://food2fork.com/view/35382\",\n  image_url:\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n  ingredients: [\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n    \"2 slices sour dough bread\",\n    \"1 tablespoon butter, room temperature\",\n    \"2 tablespoons cream cheese, room temperature\",\n    \"1/2 cup jack and cheddar cheese, shredded\",\n    \"1 tablespoon tortilla chips, crumbled\"\n  ],\n  publisher: \"Closet Cooking\",\n  publisher_url: \"http://closetcooking.com\",\n  source_url:\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n};\n","import React, { Component } from 'react'\r\nimport { recipe } from '../tempDetails';\r\n\r\nexport default class RecipeDetails extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             recipe,\r\n//             url: `https://www.food2fork.com/api/get?key=c9793da593c3cc83e21794216b8b96d3&rId=${this.props.id}`\r\n//         }\r\n  \r\n        \r\n//     }\r\n\r\n//  async componentDidMount(){\r\n//      try{\r\n//     const data=await fetch(this.state.url)\r\n//     const jsonData = await data.json()\r\n//     this.setState({\r\n//       recipe:jsonData.recipe\r\n//     })\r\n//    console.log(jsonData);\r\n   \r\n//     }catch(error){\r\n//       console.log(error);\r\n      \r\n//     }\r\n//   }\r\nstate={\r\n    recipe\r\n}\r\nasync componentDidMount() {\r\n    console.log(this.props.id);\r\n    const id=this.props.id\r\n    const url=`https://www.food2fork.com/api/get?key=c9793da593c3cc83e21794216b8b96d3&rId=${id}`\r\n    try{\r\n            const data=await fetch(url)\r\n            const jsonData = await data.json()\r\n            this.setState((state,props)=>{\r\n                return {recipe:jsonData.recipe}\r\n            },()=>{\r\n                \r\n            })\r\n           console.log(jsonData);\r\n           \r\n            }catch(error){\r\n              console.log(error);\r\n              \r\n            }\r\n}\r\n\r\n    render() {\r\n        const { image_url, publisher, publisher_url, source_url, title, ingredients }= this.state.recipe\r\n        console.log(this.state.recipe);\r\n     const {handleIndex} =this.props\r\n        return (\r\n            <React.Fragment>\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                     <button type='button' className='btn btn-warning mb-5 text-capitalize'\r\n                     onClick={()=> handleIndex(1)}\r\n                     >\r\n                      back to recipe list\r\n                     </button>\r\n                     <img src={image_url} className='d-block w-100' alt=\"recipe\"/>\r\n                      \r\n                       </div>\r\n                       <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                           <h6 className=\"text-uppercase\">{title}</h6>\r\n                           <h6 className=\"text-warning text-capitalize text-slanted\">\r\n                               provided by {publisher}\r\n                           </h6>\r\n                           <a href={publisher_url}\r\n                           target=\"_blank\"\r\n                           rel=\"noopener noreferrer\"\r\n                           className='btn btn-primary mt-2 text-capitalize'\r\n                           >\r\n                             publisher webpage\r\n                           </a>\r\n                           <a href={source_url}\r\n                           target=\"_blank\"\r\n                           rel=\"noopener noreferrer\"\r\n                           className='btn btn-success mt-2 mx-3 text-capitalize'\r\n                           >\r\n                               recipe url\r\n                           </a>\r\n                           <ul className=\"list-group mt-4\">\r\n                               <h2 className=\"mt-3 mb-4\">\r\n                                   Ingredients\r\n                               </h2>\r\n                               {\r\n                                   ingredients.map((item,index)=>{\r\n                                       return (\r\n                                           <li \r\n                                           key={index}\r\n                                           className=\"list-group-item text-slanted\">\r\n                                               {item}\r\n                                           </li>\r\n                                       )\r\n                                   })\r\n                               }\r\n                           </ul>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport {recipes} from './tempList'\nimport Recipelist from './components/recipelist'\nimport RecipeDetails from './components/recipedetail'\nclass App extends React.Component{\n  state={\n    recipes,\n    url:'https://www.food2fork.com/api/search?key=c9793da593c3cc83e21794216b8b96d3',\n    base_url:'https://www.food2fork.com/api/search?key=c9793da593c3cc83e21794216b8b96d3',\n    details_id:35375,\n    pageIndex:1,\n    search:'',\n    query:'&q=',\n    err:''\n  }\n  async getRecipes(){\n    try{\n       const data=await fetch(this.state.url)\n    const jsonData = await data.json()\n    console.log(jsonData);\n    if (jsonData.error){\n      this.setState({\n        err:'网站免费API每天限制请求50次,目前已被限制'\n      })\n    }\n    if(jsonData.recipes.length === 0){\n      this.setState(()=>{\n        return {error:`sorry,${this.state.search} not return any results` }\n      })\n    } else\n    { this.setState({\n      recipes:jsonData.recipes\n    })}\n   \n\n    }catch(error){\n      console.log(error);\n      \n    }\n   \n  }\n  componentDidMount(){\n    this.getRecipes()\n  }\n  displaypage=(index)=>{\n        switch(index){\n          default:\n          case 1:\n          return (  <Recipelist recipes={this.state.recipes} handleDetails={this.handleDetails} \n          value={this.state.search}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          error={this.state.error}\n          err={this.state.err}\n          /> )\n          case 0:\n          return (<RecipeDetails id={this.state.details_id}  handleIndex={this.handleIndex}/>  )\n        }\n  }\n  handleIndex= (index) =>{\n    this.setState({\n      pageIndex:index\n    })\n  }\n  handleDetails = (index,id) =>{\n    this.setState({\n      pageIndex:index,\n      details_id:id,\n    })\n  }\n  handleChange=(e)=>{\n    \n    this.setState({\n      search:e.target.value,\n    },()=>{\n      console.log(this.state.search);\n      \n    })     \n  }\n  handleSubmit=(e)=>{\n    e.preventDefault();\n    const{base_url,query,search} =this.state\n    this.setState(()=>{\n      return {url:`${base_url}${query}${search}`,search:''}\n    },()=>{\n      this.getRecipes();\n    })\n  }\n  render(){  \n    // console.log(this.state.recipes);\n \n    return (\n  <React.Fragment>\n  {this.displaypage(this.state.pageIndex) }\n  {/* <Recipelist recipes={this.state.recipes} handleDetails={this.handleDetails} />\n  \n  <RecipeDetails id={this.state.details_id} handleIndex={this.handleIndex} /> */}\n  </React.Fragment>\n  );}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}